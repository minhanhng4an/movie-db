[{"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/index.js":"1","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/App.js":"2","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/pages/HomePage.js":"3","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/apiService.js":"4","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/PublicNavbar.js":"5","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/Highlight.js":"6","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/HomeCarousel.js":"7","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/MovieList.js":"8"},{"size":146,"mtime":1607268558313,"results":"9","hashOfConfig":"10"},{"size":405,"mtime":1607307313720,"results":"11","hashOfConfig":"10"},{"size":5029,"mtime":1607304132043,"results":"12","hashOfConfig":"10"},{"size":928,"mtime":1607153713788,"results":"13","hashOfConfig":"10"},{"size":862,"mtime":1607307520379,"results":"14","hashOfConfig":"10"},{"size":2551,"mtime":1607302008746,"results":"15","hashOfConfig":"10"},{"size":1309,"mtime":1607307511332,"results":"16","hashOfConfig":"10"},{"size":1125,"mtime":1607305564384,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1i11n3v",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/index.js",[],["36","37"],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/App.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/pages/HomePage.js",["38","39"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport api from \"../apiService\";\nimport MovieList from \"../components/MovieList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Highlight from \"../components/Highlight\";\nimport HomeCarousel from \"../components/HomeCarousel\";\nimport PublicNavbar from \"../components/PublicNavbar\";\n\nconst HomePage = () => {\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [loadingHighlight, setLoadingHighlight] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [conf, setConf] = useState();\n  const [highlightId, setHighlightId] = useState(undefined);\n  const [showHighlight, setShowHighlight] = useState(false);\n  const [highlightTrailer, setHighlightTrailer] = useState(undefined);\n  const [genres, setGenres] = useState([]);\n  const [availableGenreIds, setAvailableGenreIds] = useState(new Set());\n  const [availableGenres, setAvailableGenres] = useState([]);\n\n  const highlightMovie = movies.filter((movie) => movie.id === highlightId)[0];\n\n  const handleScroll = () => {\n    if (window.scrollY > 400) {\n      document.querySelector(\".public-nav\").classList.add(\"nav-scroll\");\n    } else {\n      document.querySelector(\".public-nav\").classList.remove(\"nav-scroll\");\n    }\n  };\n\n  const getData = async (service, endpoint) => {\n    try {\n      const response = await service.get(endpoint);\n      const data = await response.data;\n\n      if (response.status === 200) {\n        return data;\n      } else {\n        setErrorMsg(`FETCH MOVIES ERROR: ${data.message}`);\n      }\n    } catch (error) {\n      setErrorMsg(`FETCH MOVIES ERROR: ${error.message}`);\n    }\n    return;\n  };\n\n  const fetchGenres = useCallback(async () => {\n    setLoading(true);\n    const data = await getData(api, \"/genre/movie/list\");\n    setGenres(data.genres);\n\n    setAvailableGenreIds(\n      movies\n        .map((movie) => movie.genre_ids)\n        .reduce(\n          (accumulator, currentValue) =>\n            new Set([...accumulator, ...currentValue]),\n          new Set()\n        )\n    );\n\n    setLoading(false);\n  }, [movies]);\n\n  const fetchTrailer = useCallback(async () => {\n    setLoadingHighlight(true);\n\n    const data = await getData(api, `/movie/${highlightId}/videos`);\n\n    try {\n      const trailers = data.results.filter((video) =>\n        video.type.toLowerCase().includes(\"trailer\")\n      );\n\n      setHighlightTrailer(trailers[trailers.length - 1].key);\n    } catch {\n      setHighlightTrailer(undefined);\n    }\n\n    setLoadingHighlight(false);\n  }, [highlightId]);\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n\n    const data = await getData(api, \"/trending/movies/week\");\n    setMovies(data.results);\n\n    setLoading(false);\n  }, []);\n\n  const fetchConfig = useCallback(async () => {\n    setLoading(true);\n\n    const data = await getData(api, \"/configuration\");\n    setConf(data.images);\n\n    setLoading(false);\n  }, [movies]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  useEffect(() => {\n    fetchConfig();\n  }, [fetchConfig]);\n\n  useEffect(() => {\n    fetchTrailer();\n  }, [fetchTrailer]);\n\n  useEffect(() => {\n    fetchGenres();\n  }, [fetchGenres]);\n\n  useEffect(() => {\n    setAvailableGenres(\n      genres.filter((genre) => availableGenreIds.has(genre.id))\n    );\n  }, [genres, availableGenreIds]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"hashchange\", function () {\n      window.scrollTo(window.scrollX, window.scrollY - 50);\n    });\n    return () => {\n      window.removeEventListener(\"hashchange\");\n    };\n  }, []);\n\n  return (\n    <>\n      {!loading && (\n        <>\n          <PublicNavbar availableGenres={availableGenres} />\n\n          <Container fluid className=\"page-body\">\n            <HomeCarousel\n              loading={loading}\n              movies={movies}\n              conf={conf}\n              setHighlightId={setHighlightId}\n              setShowHighlight={setShowHighlight}\n            />\n            {genres.map((genre) => (\n              <MovieList\n                key={genre.id}\n                loading={loading}\n                movies={movies}\n                conf={conf}\n                genre={genre}\n                setHighlightId={setHighlightId}\n                setShowHighlight={setShowHighlight}\n              />\n            ))}\n\n            {showHighlight && !loadingHighlight && (\n              <Highlight\n                showHighlight={showHighlight}\n                setShowHighlight={setShowHighlight}\n                conf={conf}\n                highlightMovie={highlightMovie}\n                highlightTrailer={highlightTrailer}\n                availableGenres={availableGenres}\n              />\n            )}\n          </Container>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/apiService.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/PublicNavbar.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/Highlight.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/HomeCarousel.js",[],"/Users/coderschool/Documents/cs-ftw/cs_ftw_projects/weekly_projects/week_5/src/components/MovieList.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":101,"column":6,"nodeType":"50","endLine":101,"endColumn":14,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'errorMsg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'movies'. Either exclude it or remove the dependency array.","ArrayExpression",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: []",{"range":"57","text":"58"},[3017,3025],"[]"]